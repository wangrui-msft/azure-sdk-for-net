// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.Communication.Rooms.Models
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class AzureCommunicationRoomServiceModelFactory
    {
        /// <summary> Initializes a new instance of CreateRoomResponse. </summary>
        /// <param name="room"> The meeting room. </param>
        /// <param name="invalidParticipants"> Collection of participants failed to be added to the room. </param>
        /// <returns> A new <see cref="Models.CreateRoomResponse"/> instance for mocking. </returns>
        public static CreateRoomResponse CreateRoomResponse(RoomModel room = null, IReadOnlyDictionary<string, object> invalidParticipants = null)
        {
            invalidParticipants ??= new Dictionary<string, object>();

            return new CreateRoomResponse(room, invalidParticipants);
        }

        /// <summary> Initializes a new instance of RoomModel. </summary>
        /// <param name="id"> Unique identifier of a room. This id is server generated. </param>
        /// <param name="createdDateTime"> The timestamp when the room was created at the server. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        /// <param name="validFrom"> The timestamp from when the room is open for joining. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        /// <param name="validUntil"> The timestamp from when the room can no longer be joined. The timestamp is in RFC3339 format: `yyyy-MM-ddTHH:mm:ssZ`. </param>
        /// <param name="participants"> Collection of identities invited to the room. </param>
        /// <returns> A new <see cref="Models.RoomModel"/> instance for mocking. </returns>
        public static RoomModel RoomModel(string id = null, DateTimeOffset? createdDateTime = null, DateTimeOffset? validFrom = null, DateTimeOffset? validUntil = null, IReadOnlyDictionary<string, object> participants = null)
        {
            participants ??= new Dictionary<string, object>();

            return new RoomModel(id, createdDateTime, validFrom, validUntil, participants);
        }

        /// <summary> Initializes a new instance of UpdateRoomResponse. </summary>
        /// <param name="room"> The meeting room. </param>
        /// <param name="invalidParticipants"> Collection of participants failed to be added to the room. </param>
        /// <returns> A new <see cref="Models.UpdateRoomResponse"/> instance for mocking. </returns>
        public static UpdateRoomResponse UpdateRoomResponse(RoomModel room = null, IReadOnlyDictionary<string, object> invalidParticipants = null)
        {
            invalidParticipants ??= new Dictionary<string, object>();

            return new UpdateRoomResponse(room, invalidParticipants);
        }
    }
}
